// File: ioutil.h

/*
 * Input/Ouput routines for pjayci.x
 */

#ifndef ioutil_h
#define ioutil_h

#define FLNMSIZE           30
#define MAX_LINE_SIZE     300
#define MAX_NAMELIST_SIZE  30

/* check_for_file
 * --------------
 * Check if file exists and can be opened for desired operation.
 */
int check_for_file(char *filename, char *fileoperation);

/* checkinputfiles
 * ---------------
 * Check for the following input files:
 *  (1) = jayci.in    = input file containing &general and &diagalg namelists
 *  (2) = input.jayci = input file generated by jayci_exp.x
 *  (3) = moints      = molecular integral file
 *  (4) = det.list    = determinant input list
 * Returns integer value of missing input file.
 */
int checkinputfiles();

/* find_str_count_in_file: find occurances of string in file.
 * -------------------------------------------------------------------
 * Input:
 *  string = string to search for
 *  stream = file stream
 */
int find_str_count_in_file(char *string, FILE *fptr);

/* find_str_line: find and return position in FILE *stream where string
 * first occurs.
 * -------------------------------------------------------------------
 * Input:
 *  string = string to search for
 *  stream = file stream
 */
FILE *find_str_line(char *string, FILE *fptr);

/*
 * print_array_2d: print 2d array
 */
void print_array_2d(double **array, int rows, int cols);

/* readgeninput: read general wavefunction input.
 * -------------------------------------------------------------------
 * Calls readnamelist which returns a character array
 *  nmlstr[0] = elec
 *  nmlstr[1] = orbs
 *  nmlist[2] = nfrozen
 *  nmlist[3] = ndocc
 *  nmlist[4] = nactive
 *  nmlist[5] = xlevel
 *  nmlist[6] = nfrzvirt
 *  nmlist[7] = printlvl
 *  nmlist[8] = printwvf
 *
 * Output:
 *  elec = number of electrons in system (alpha + beta)
 *  orbs = number of orbitals in system (including forzen core)
 *  nfrozen = number of frozen core orbitals
 *  ndocc = number of doubly-occupied orbitals
 *  nactive = number of active orbitals
 *  xlevel = excitaion level (Default is 2)
 *  nfrzvirt = number of frozen virtual orbitals
 *  printlvl = print level
 *  printwvf = print wavefunctions (0: no; 1: yes)
 *  err = error handling: n = missing variable n */
void readgeninput(int *elec,     int *orbs,   int *nfrozen,  int *ndocc,
	          int *nactive,  int *xlevel, int *nfrzvirt, int *printlvl,
                  int *printwvf, int *err);

/* readmointegrals: Subroutine to read 1 and 2 electron integrals.
 * -------------------------------------------------------------------
 * Calls fortran subroutine readmoints()
 *
 * Input:
 *  itype     = type of integrals to read
 *  orbitals = MO's in system
 *  mofile   = name of molecular orbital file
 *  m1len    = length of moints1
 *  m2len    = length of moints2
 * Output:
 *  moints1  = 1-e integrals
 *  moints2  = 2-e integrals
 *  nuc_rep  = nuclear repulsion energy
 *  fcenergy = frozen-core energy */
void readmointegrals(double *moints1, double *moints2, int itype,
		     int orbitals, char *restrict moflname, int m1len,
		     int m2len, double *nuc_rep, double *fcenergy);

#endif
