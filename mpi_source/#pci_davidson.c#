// File: pci_davidson.c
/*
 * Davidson algorithm for pjayci.c
 */


/*
 * pdvdalg: parallel davidson algorithm. Hv=c is parallelized.
 */
int pdvdalg(struct det *dlist, int ndets, double *moints1, double *moints2,
	    int aelec, int belec, int ninto, double totfrze, int maxiter,
	    int krymin, int krymax, int nroots, double restol,
	    struct rowmap *hmap, int lwrbnd, int uppbnd, int predr, int plvl,
	    int mpi_proc_rank)
{
	int error = 0; /* Error flag */
	int const mpi_root = 0; /* Root process is always 0 */
	
	double *hdgls = NULL; /* diagonal matrix elements <i|H|i> */
	
        /* Compute diagonal matrix elements <i|H|i>. This is done on the root
	 * process. It is needed for the Davidson algorithm. */
	if (mpi_proc_rank == mpi_root) {
		if (plvl > 0) printf("Computing diagonal elements.\n");
		hdgls = (double *) malloc(ndets * sizeof(double));
		compute_hdgls(detlist, ndets, moints1, moints2, aelec, belec,
			      hdgls, ninto);
		if (plvl > 0) printf("Hartree Fock energy = %15.8lf\n",
				     (hdgls[0] + totfrze));
	}
}